git clone git@github.com:sonia-auv/ros_sonia_ws.git $ROS_SONIA_WS
cd $ROS_SONIA_WS
git checkout develop
$ROS_SONIA_WS/git_update.sh
sudo ldconfig

## apply patch
cd ~
mkdir patch
cd patch
wget http://sonia-auv.readthedocs.org/assets/files/patch.tar.gz -O ./patch.tar.gz
tar -xvf ./patch.tar.gz
sudo patch /usr/include/mlpack/methods/kmeans/kmeans_impl.hpp kmeans.patch
sudo patch /opt/ros/kinetic/include/opencv-3.3.1/opencv2/core/traits.hpp traits.patch
if [ ! -f ~/.config/pip/pip.conf ]; then
    patch ~/.config/pip/pip.conf pip_conf.patch
fi


## ask for the sonia version
echo "Quelle version du script vous voulez installer?"
select ask in "Devel" "Prod" "Annuler"; do
    case $ask in
        Devel ) sudo patch ~/.bash_sonia devel.patch
                pip2 install $ROS_SONIA_WS/requirements/develop.txt
                break;;
        Prod )  sudo patch ~/.bash_sonia prod.patch
                pip2 install $ROS_SONIA_WS/requirements/prod.txt
                break;;
        Annuler ) break;;
    esac
done

## install ros for the virtualenvs
wget http://sonia-auv.readthedocs.org/assets/files/ros_requirements.txt
cat ros_requirements.txt | xargs -n 1 pip2 install
rm ros_requirements.txt

cd ..
rm -rf patch
cd $ROS_SONIA_WS

## setup ros
sudo rosdep init
rosdep update

## compile
catkin_make -j8 -DCMAKE_CXX_FLAGS="-O2"
source devel/setup.bash
